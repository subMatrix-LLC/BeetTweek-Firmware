/*
 * EEPromMap.h
 *
 *  Created on: Nov 9, 2021
 *      Author: casht
 */

#ifndef INC_EEPROMMAP_H_
#define INC_EEPROMMAP_H_

#include "MotorAngleState.h"

#define EE_BYTES_PER_MODE (128)

enum EEPROMAddresses {

	//-------Persistent-----------------------------------------------------------
	//USER CAL
	EE_DAC0_CAL_32bits      = 0,
	EE_DAC1_CAL_32bits      = EE_DAC0_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,
	EE_DAC2_CAL_32bits      = EE_DAC1_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,
	EE_DAC3_CAL_32bits      = EE_DAC2_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,

	EE_ADC0_CAL_32bits      = EE_DAC3_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,
	EE_ADC1_CAL_32bits      = EE_ADC0_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,
	EE_ADC2_CAL_32bits      = EE_ADC1_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,
	EE_ADC3_CAL_32bits      = EE_ADC2_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,

	EE_FrictionFactor_32bits    = EE_ADC3_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,

	//FACTORY CAL
	EE_DAC0_FACTORY_CAL_32bits      = EE_FrictionFactor_32bits+4,
	EE_DAC1_FACTORY_CAL_32bits      = EE_DAC0_FACTORY_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,
	EE_DAC2_FACTORY_CAL_32bits      = EE_DAC1_FACTORY_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,
	EE_DAC3_FACTORY_CAL_32bits      = EE_DAC2_FACTORY_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,

	EE_ADC0_FACTORY_CAL_32bits      = EE_DAC3_FACTORY_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,
	EE_ADC1_FACTORY_CAL_32bits      = EE_ADC0_FACTORY_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,
	EE_ADC2_FACTORY_CAL_32bits      = EE_ADC1_FACTORY_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,
	EE_ADC3_FACTORY_CAL_32bits      = EE_ADC2_FACTORY_CAL_32bits+NUM_DAC_ADC_CAL_POINTS*4,

	EE_SERIALNUMBER_32Bit    = EE_ADC3_FACTORY_CAL_32bits + +NUM_DAC_ADC_CAL_POINTS*4,
	EE_EEPROMCheckCode_16bit = EE_SERIALNUMBER_32Bit+4,

	EE_DrivePowerFactor_32bits = EE_EEPROMCheckCode_16bit+2,
	EE_DriveOffset_32bits = EE_DrivePowerFactor_32bits+4,
	EE_NewCalibrationsPerformed_32bits = EE_DriveOffset_32bits+4,
	EE_CombinedBoardMotorDirection_32bits = EE_NewCalibrationsPerformed_32bits + 4,



	//-------End Persistant-----------------------------------------------------------







	EE_LASTMODE				 = EE_CombinedBoardMotorDirection_32bits+4,
	EE_LASTVariant		     = EE_LASTMODE+1,
	EE_ANGLECALIBRATION_16bit= EE_LASTVariant+1,



	//MODES -
	EE_MODE_MEMORY_0  = EE_ANGLECALIBRATION_16bit + 2,
	EE_MODE_MEMORY_1  = EE_MODE_MEMORY_0  + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_2  = EE_MODE_MEMORY_1  + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_3  = EE_MODE_MEMORY_2  + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_4  = EE_MODE_MEMORY_3  + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_5  = EE_MODE_MEMORY_4  + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_6  = EE_MODE_MEMORY_5  + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_7  = EE_MODE_MEMORY_6  + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_8  = EE_MODE_MEMORY_7  + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_9  = EE_MODE_MEMORY_8  + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_10 = EE_MODE_MEMORY_9  + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_11 = EE_MODE_MEMORY_10 + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_12 = EE_MODE_MEMORY_11 + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_13 = EE_MODE_MEMORY_12 + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_14 = EE_MODE_MEMORY_13 + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_15 = EE_MODE_MEMORY_14 + EE_BYTES_PER_MODE,
	EE_MODE_MEMORY_16 = EE_MODE_MEMORY_15 + EE_BYTES_PER_MODE,

	EE_GESTURE_STATESAVED_8bits = EE_MODE_MEMORY_16 + EE_BYTES_PER_MODE,
	EE_GESTURE_STATE_32bits     = EE_GESTURE_STATESAVED_8bits + 1,
	EE_GESTURE_ENDIDX_32bits    = EE_GESTURE_STATE_32bits + 4,
	EE_GESTURE_TEMPO_32bits     = EE_GESTURE_ENDIDX_32bits + 4,
	EE_GESTURE_MOTORSTATE       = EE_GESTURE_TEMPO_32bits + 4,


	EE_FAKE_PLUG_STATES_32bits = EE_FrictionFactor_32bits + sizeof(MotorAngleState),

	EE_TAP_TEMPO_TNEXT_32bits = EE_FAKE_PLUG_STATES_32bits + 4*4,
	EE_TAP_TEMPO_BPS_32bits = EE_TAP_TEMPO_TNEXT_32bits + 4,
	EE_TAP_TEMPO_BPSFLT_32bits = EE_TAP_TEMPO_BPS_32bits + 4,

	EE_FLIPPED_FRONT_PLATE = EE_TAP_TEMPO_BPSFLT_32bits + 4,

	EE_FIRMWARE_VERSION_32bits = EE_FLIPPED_FRONT_PLATE + 4,

	EE_END = 64000/8//64kbits = 8KBytes
};


#endif /* INC_EEPROMMAP_H_ */
